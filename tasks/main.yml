---
- name: Ensure passwordless sudo is enabled for current user
  become: true
  blockinfile:
    dest: '/etc/sudoers.d/dotfiles'
    block: '{{ ansible_env.USER }} ALL=(ALL) ALL'
    create: true
  when: is_privileged_user

- import_tasks: macos.yml
  when: ansible_os_family in ['Darwin']
  tags: [macos]

- name: Ensure apt cache is updated on Debian based OSes
  become: true
  apt: update_cache=true cache_valid_time=3600
  when: is_privileged_user and ansible_os_family == 'Debian'

- name: Ensure base dependencies are installed
  become: "{{ (ansible_os_family in ['Darwin']) | ternary('false', 'true') }}"
  package: name={{item}}
  with_items:
    - git
    - jq
    - htop
    - wget
  when: is_privileged_user

- name: Ensure non MacOS base dependencies are installed
  become: true
  package: name={{item}}
  with_items:
    - man
    - bash-completion
  when: is_privileged_user and ansible_os_family not in ['Darwin']

- name: 'Ensure zenburn dircolors is present in "{{ ansible_env.HOME }}/.dir_colors"'
  copy:
    src: 'files/dircolors'
    dest: '{{ ansible_env.HOME }}/.dir_colors'

# https://sanctum.geek.nz/arabesque/better-bash-history/
- name: 'Ensure improved bash history is applied to "{{ ansible_env.HOME }}/.bashrc"'
  blockinfile:
    dest: '{{ ansible_env.HOME }}/.bashrc'
    create: true
    marker: '# {mark} ANSIBLE MANAGED BLOCK (better bash history)'
    block: |
      HISTFILESIZE=1000000
      HISTSIZE=1000000
      HISTCONTROL=ignoreboth
      HISTTIMEFORMAT='%Y-%m-%dT%T '
      shopt -s cmdhist
      shopt -s histappend
      PROMPT_COMMAND='history -a'

- name: 'Ensure bash color theme is applied to "{{ ansible_env.HOME }}/.bashrc"'
  blockinfile:
    dest: '{{ ansible_env.HOME }}/.bashrc'
    create: true
    marker: '# {mark} ANSIBLE MANAGED BLOCK (add colors in terminal)'
    block: |
      function parse_git_branch() {
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
      }
      function EXT_COLOR () { echo -ne "\e[38;5;$1m"; }
      function CLOSE_COLOR () { echo -ne '\e[m'; }
      function parse_git_branch() {
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
      }

      export PS1="\[`EXT_COLOR 151`\]\u\[`CLOSE_COLOR`\]@\[`EXT_COLOR 174`\]\h\[`CLOSE_COLOR`\]\[`EXT_COLOR 187`\] \w\$(type parse_git_branch &>/dev/null && parse_git_branch) \$ \[`CLOSE_COLOR`\]"
      eval $( {{ 'gdircolors' if ansible_os_family in ['Darwin'] else 'dircolors'}} -b $HOME/.dir_colors )

- name: 'Ensure private bash completions are sourced'
  blockinfile:
    dest: '{{ ansible_env.HOME }}/.bashrc'
    create: true
    marker: '# {mark} ANSIBLE MANAGED BLOCK (Ensure private bash completions are sourced)'
    block: |
      if [[ -d ~/.bash_completion.d/ ]]
      then
          for f in ~/.bash_completion.d/*
          do
              source "$f"
          done
      fi

- name: 'Ensure private {{ ansible_env.HOME }}/.bash_completion.d directory exists'
  file:
    path: '{{ ansible_env.HOME }}/.bash_completion.d'
    state: directory

- name: Ensure vagrant bash completion is used
  get_url:
    url: https://raw.githubusercontent.com/hashicorp/vagrant/master/contrib/bash/completion.sh
    dest: '{{ ansible_env.HOME }}/.bash_completion.d/vagrant'

- name: Ensure docker bash completion is used
  get_url:
    url: https://raw.githubusercontent.com/docker/docker-ce/master/components/cli/contrib/completion/bash/docker
    dest: '{{ ansible_env.HOME }}/.bash_completion.d/docker'

- name: Check if conda is initialized
  lineinfile:
    dest: '{{ bash_profile_path }}'
    line: '# <<< conda init <<<'
  check_mode: yes
  register: presence
  failed_when: presence.changed
  ignore_errors: true

- name: Ensure conda is deactivated in bash_profile
  lineinfile:
    dest: '{{ bash_profile_path }}'
    line: 'conda deactivate'
    insertafter: '# <<< conda init <<<'
  when: presence is not changed

# https://unix.stackexchange.com/questions/87745/what-does-lc-all-c-do
# TODO: Look into making the locale handling more granular
- name: Ensure LC_ALL is set to en_US.UTF-8
  blockinfile:
    dest: '{{ bash_profile_path }}'
    block: 'export LC_ALL=en_US.UTF-8'
    create: true
    marker: '# {mark} ANSIBLE MANAGED BLOCK (Ensure LC_ALL is set)'
    insertbefore: BOF
